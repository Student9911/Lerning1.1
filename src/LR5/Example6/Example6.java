package LR5.Example6;

public class Example6 {

    private int min;
    private int max;

    public void volume(int a) {
        if (a < max) {
            min = a;
        } else {
            max = a;
        }
    }
    public void volume(int a, int b) {

        min = Math.min(a, b);
        max = Math.max(a, b);

    }
    void result() {
        System.out.println("min = " + min + "max = " + max);
    }
    //конструктор, который работает по тому же принципу, что и метод для присваивания значений полям
    Example6(int a, int b) {
        System.out.println("Конструктор Example6() c 2-я аргументами");
        min = Math.min(a, b);
        max = Math.max(a, b);
    }
    //конструктор, который работает по тому же принципу, что и метод для присваивания значений полям
    Example6(int a) {
        System.out.println("Конструктор Example6() c 1-м аргументом");
        if (a < max) {
            min = a;
        } else {
            max = a;
        }
    }
}


/*6. Напишите программу с классом, в котором есть два закрытых
 целочисленных поля (назовем их max и min). Значение поля max не может
 быть меньше значения поля min. Значения полям присваиваются с помощью
 открытого метода. Метод может вызываться с одним или двумя целочисленными
 аргументами. При вызове метода значения полям присваиваются так:
 сравниваются текущие значения полей и значения аргументов,
 переданных методу. Самое большое из значений присваивается полю max,
 а самое маленькое из значений присваивается полю min.
 Предусмотрите конструктор, который работает по тому же принципу,
 что и метод для присваивания значений полям. В классе также должен быть метод,
 отображающий в консольном окне значения полей объекта.*/
